{"version":3,"sources":["assets/images/logo.jpg","services/swapi.js","store/resources/selectors.js","store/resources/actions.js","store/resources/reducer.js","store/common/errorsReducer.js","store/reducers.js","store/index.js","middleware/errorHandler.js","components/layout/Header.jsx","components/ListView.jsx","components/ListItem.jsx","components/Pagination.jsx","components/Search.jsx","components/ui/Loader.jsx","containers/ResourceList.jsx","components/ShowItem.jsx","containers/ResourceItem.jsx","containers/App.jsx","serviceWorker.js","index.js"],"names":["module","exports","baseAPIUrl","getResourcesMap","a","axios","get","cache","data","getResourcesByName","name","params","getResource","id","getResourcesNames","state","Object","keys","resources","resourcesMap","getResources","map","el","getPageResources","resourcesPage","search","page","searchPageIds","pageData","getResourcesMeta","count","perPage","lastPage","Math","ceil","FETCH_RESOURCE_REQUEST","FETCH_RESOURCE_SUCCESS","FETCH_RESOURCE_FAILURE","dispatch","getState","type","response","resourcesSelectors","swapiService","then","res","serializeResource","payload","FETCH_RESOURCES_BY_NAME_REQUEST","FETCH_RESOURCES_BY_NAME_SUCCESS","FETCH_RESOURCES_BY_NAME_FAILURE","resourcesMeta","undefined","dispatchParams","pageResources","length","results","FETCH_RESOURCES_MAP_REQUEST","FETCH_RESOURCES_MAP_SUCCESS","FETCH_RESOURCES_MAP_FAILURE","categoriesMap","resource","url","split","reverse","reduceReducers","error","action","forEach","push","errorsSelectors","errors","combineReducers","createStore","rootReducer","applyMiddleware","thunk","store","next","console","log","useStyles","makeStyles","theme","appBar","zIndex","modal","drawer","width","flexShrink","drawerPaper","toolbar","mixins","Header","props","React","useState","isSidebarOpen","setIsSidebarOpen","toggleDrawer","event","classes","linksNames","AppBar","position","className","join","Container","Toolbar","Hidden","smUp","IconButton","onClick","to","src","logo","alt","style","flexGrow","xsDown","List","key","Drawer","paper","open","onClose","button","ListItemText","ListView","this","renderItem","keyExtractor","Component","ListItem","location","pathname","title","Pagination","itemRender","bind","current","element","meta","total","onChange","showLessItems","showTitle","createMuiTheme","palette","Search","debounceUpdateSearch","debounce","updateSearch","handleChange","searchInput","createRef","prevProps","prevState","snapshot","resourceName","value","searchProp","e","target","ThemeProvider","noValidate","autoComplete","TextField","label","defaultValue","ref","margin","variant","Loader","show","CircularProgress","color","size","ResourceList","isFetching","URL","window","href","searchParams","match","currentUrl","prevUrl","setState","history","Typography","gutterBottom","capitalize","message","item","_keyExtractor","withRouter","connect","resourcesActions","ShowItem","array","renderLinkItem","option","Array","renderArray","privateFields","filter","includes","upperFirst","lowerCase","relatedProps","renderRelation","ResourceItem","resolvedData","getResourceItem","itemId","newResolvedData","promiseArray","parseUrl","Promise","all","getResourceSelector","App","isLoading","errorInfo","arguments","warn","resourcesNames","exact","path","component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","primary","main","secondary","breakpoints","values","xs","sm","md","lg","process","ReactDOM","render","basename","document","getElementById","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f64388e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.dccef97f.jpg\";","import axios from \"axios\"\n\nconst baseAPIUrl = \"https://swapi.co/api\"\n\nexport async function getResourcesMap () {\n  const {data} = await axios.get(baseAPIUrl + \"/\", { cache: \"default\"})\n  return data\n}\n\nexport async function getResourcesByName (name, params) {\n  const {data} = await axios.get(`${baseAPIUrl}/${name}`, {params})\n  return data\n}\n\nexport async function getResource (name, id) {\n  const {data} = await axios.get(`${baseAPIUrl}/${name}/${id}`)\n  return data\n}","export function getResourcesNames (state) {\n  return Object.keys(state.resources.resourcesMap)\n}\n\nexport function getResources (state, name) {\n  const resources = (state.resources[name] && state.resources[name].data) || {}\n  return Object.keys(resources).map(el => resources[el])\n}\n\nexport function getPageResources (state, name, params) {\n  const resources = state.resources[name]\n  let resourcesPage\n  if(resources) {\n    const search = params ? params.search : resources.search\n    const page = params ? params.page : resources.page\n    if (search)\n      resourcesPage = resources.searchPageIds\n    else {\n      resourcesPage = resources.pageData && resources.pageData[page]\n    }\n  }\n  return resourcesPage ? resourcesPage.map(el => resources.data[el]) : []\n}\n\nexport function getResourcesMeta (state, name) {\n  const resources = state.resources[name]\n  if (resources && resources.pageData) {\n    const page = +resources.page\n    const count = +resources.count\n    const perPage = 10\n    const lastPage = Math.ceil(count / perPage)\n    const search = resources.search\n\n    return {\n      page,\n      count,\n      perPage,\n      lastPage,\n      search\n    }\n  }\n  return {}\n}\n\nexport function getResource (state, name, id) {\n  return state.resources[name] && state.resources[name].data[id]\n}","import * as swapiService from \"services/swapi\"\nimport { resourcesSelectors } from \"store/resources\"\n\nexport const FETCH_RESOURCE_REQUEST = \"FETCH_RESOURCE_REQUEST\"\nexport const FETCH_RESOURCE_SUCCESS = \"FETCH_RESOURCE_SUCCESS\"\nexport const FETCH_RESOURCE_FAILURE = \"FETCH_RESOURCE_FAILURE\"\n\nexport function getResource (name, id) {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: FETCH_RESOURCE_REQUEST,\n      name\n    })\n    try {\n      let response = resourcesSelectors.getResource(getState(), name, id)\n      if (!response) {\n        response = await swapiService.getResource(name, id)\n          .then(res => serializeResource(res))\n      }\n      dispatch({\n        type: FETCH_RESOURCE_SUCCESS,\n        name,\n        payload: response\n      })\n    } catch (error) {\n      dispatch({\n        type: FETCH_RESOURCE_FAILURE,\n        name,\n        payload: error\n      })\n      throw error\n    }\n  }\n}\n\nexport const FETCH_RESOURCES_BY_NAME_REQUEST = \"FETCH_RESOURCES_BY_NAME_REQUEST\"\nexport const FETCH_RESOURCES_BY_NAME_SUCCESS = \"FETCH_RESOURCES_BY_NAME_SUCCESS\"\nexport const FETCH_RESOURCES_BY_NAME_FAILURE = \"FETCH_RESOURCES_BY_NAME_FAILURE\"\n\nexport function getResourcesByName (name, params = {}) {\n  return async (dispatch, getState) => {\n    const resourcesMeta = resourcesSelectors.getResourcesMeta(getState(), name)\n    const page = params.page || 1\n    const search = params.search !== undefined ? params.search : resourcesMeta.search\n    const dispatchParams = {search, page}\n    dispatch({\n      type: FETCH_RESOURCES_BY_NAME_REQUEST,\n      name,\n      params: dispatchParams\n    })\n    try {\n      let response\n      if (!dispatchParams.search) {\n        if (resourcesMeta.count) {\n          const pageResources = resourcesSelectors.getPageResources(getState(), name, dispatchParams)\n          if (pageResources.length) {\n            response = {\n              results: pageResources,\n              ...resourcesMeta\n            }\n          }\n        }\n      }\n      \n      // cached only last searching, so if this searching identical by last searching then get items from cache \n      if (\n        dispatchParams.search &&\n        +page === +resourcesMeta.page &&\n        (params.search === undefined || params.search === resourcesMeta.search)\n      ) {\n        const pageResources = resourcesSelectors.getPageResources(getState(), name)\n        if (pageResources.length) {\n          response = {\n            results: pageResources,\n            ...resourcesMeta\n          }\n        }\n      }\n      \n      if (!response) {\n        response = await swapiService.getResourcesByName(name, dispatchParams)\n          .then(res => ({...res, results: res.results.map(el => serializeResource(el))}))\n      }\n      dispatch({\n        type: FETCH_RESOURCES_BY_NAME_SUCCESS,\n        name,\n        params: dispatchParams,\n        payload: response\n      })\n    } catch (error) {\n      dispatch({\n        type: FETCH_RESOURCES_BY_NAME_FAILURE,\n        name,\n        params: dispatchParams,\n        payload: error\n      })\n      throw error\n    }\n  }\n}\n\nexport const FETCH_RESOURCES_MAP_REQUEST = \"FETCH_RESOURCES_MAP_REQUEST\"\nexport const FETCH_RESOURCES_MAP_SUCCESS = \"FETCH_RESOURCES_MAP_SUCCESS\"\nexport const FETCH_RESOURCES_MAP_FAILURE = \"FETCH_RESOURCES_MAP_FAILURE\"\n\nexport function getResourcesMap () {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_RESOURCES_MAP_REQUEST\n    })\n    try {\n      const categoriesMap = await swapiService.getResourcesMap()\n      dispatch({\n        type: FETCH_RESOURCES_MAP_SUCCESS,\n        payload: categoriesMap\n      })\n    } catch (error) {\n      dispatch({\n        type: FETCH_RESOURCES_MAP_FAILURE,\n        payload: error\n      })\n      throw error\n    }\n  }\n}\n\nfunction serializeResource (resource) {\n  return {\n    ...resource,\n    id: resource.url.split(\"/\").reverse()[1]\n  }\n}","import reduceReducers from \"reduce-reducers\"\n\nimport {\n  FETCH_RESOURCES_MAP_FAILURE,\n  FETCH_RESOURCES_MAP_SUCCESS,\n  FETCH_RESOURCES_MAP_REQUEST,\n  FETCH_RESOURCES_BY_NAME_FAILURE,\n  FETCH_RESOURCES_BY_NAME_SUCCESS,\n  FETCH_RESOURCES_BY_NAME_REQUEST,\n  FETCH_RESOURCE_FAILURE,\n  FETCH_RESOURCE_REQUEST,\n  FETCH_RESOURCE_SUCCESS\n} from \"store/resources/actions\"\n\nfunction resource (state, action) {\n  switch (action.type) {\n    case FETCH_RESOURCE_REQUEST:\n      return {...state, error: null}\n    case FETCH_RESOURCE_SUCCESS:\n      let resources\n      if (state[action.name]) {\n        resources = {\n          ...state[action.name]\n        }\n      } else {\n        resources = {\n          data: {}\n        }\n      }\n      resources.data[action.payload.id] = action.payload\n      return {...state, [action.name]: resources}\n    case FETCH_RESOURCE_FAILURE:\n      return {...state, error: action.payload}\n    default:\n      return state\n  }\n}\n\nfunction resources (state, action) {\n  switch (action.type) {\n    case FETCH_RESOURCES_BY_NAME_REQUEST:\n      return {...state, error: null}\n    case FETCH_RESOURCES_BY_NAME_SUCCESS:\n      let resources = {\n        count: action.payload.count,\n        ...action.params\n      }\n      if (state[action.name]) {\n        resources = {\n          ...state[action.name],\n          ...resources\n        }\n      }\n      if (!resources.data) resources.data = {}\n      if (!resources.pageData) resources.pageData = {}\n\n      const {page} = action.params\n\n      if (resources.search) {\n        resources.searchPageIds = []\n        action.payload.results.forEach(el => {\n          resources.data[el.id] = el\n          resources.searchPageIds.push(el.id)\n        })\n      } else if (!(resources.pageData[page] && resources.pageData[page].length)) {\n        resources.pageData[page] = []\n        action.payload.results.forEach(el => {\n          resources.data[el.id] = el\n          resources.pageData[page].push(el.id)\n        })\n      }\n      return {...state, [action.name]: resources}\n    case FETCH_RESOURCES_BY_NAME_FAILURE:\n      return {...state, error: action.payload}\n    default:\n      return state\n  }\n}\n\nfunction resourcesMap (state, action) {\n  switch (action.type) {\n    case FETCH_RESOURCES_MAP_REQUEST:\n      return {...state, error: null}\n    case FETCH_RESOURCES_MAP_SUCCESS:\n      return {...state, resourcesMap: action.payload}\n    case FETCH_RESOURCES_MAP_FAILURE:\n      return {...state, error: state.payload}\n    default:\n      return state\n  }\n}\n\nexport default reduceReducers({\n  resourcesMap: {},\n  error: null\n}, resourcesMap, resources, resource)","import {\n  FETCH_RESOURCE_FAILURE,\n  FETCH_RESOURCES_BY_NAME_FAILURE,\n  FETCH_RESOURCES_MAP_FAILURE\n} from \"store/resources/actions\"\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_RESOURCE_FAILURE:\n    case FETCH_RESOURCES_BY_NAME_FAILURE:\n    case FETCH_RESOURCES_MAP_FAILURE:\n      return [...state, action.payload]\n    default:\n      return state\n  }\n}\n\nexport const errorsSelectors = {\n  getErrors: state => state.errors\n}","import { combineReducers } from \"redux\"\nimport resources from \"./resources/reducer\"\nimport errors from \"./common/errorsReducer\"\n\n\nexport default combineReducers({\n  resources,\n  errors\n})","import { createStore, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport errorHandler from \"middleware/errorHandler\"\nimport rootReducer from \"./reducers\"\n\nexport default createStore(\n    rootReducer,\n    applyMiddleware(\n      thunk\n      ,errorHandler\n    )\n)","export default store => next => action => {\n  console.log(\"============================================\")\n  console.log(action.type)\n  console.log(\"action.name: \", action.name)\n  console.log(action.payload)\n  console.log(\"============================================\")\n\n  try {\n    next(action)\n  } catch (error) {\n    console.error(error)\n    return error\n  }\n}","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport \"./Header.scss\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuIcon from \"@material-ui/icons/Menu\"\nimport Container from \"@material-ui/core/Container\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport Drawer from \"@material-ui/core/Drawer\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport logo from \"assets/images/logo.jpg\"\n\nconst drawerWidth = 240\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.modal + 1\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  toolbar: theme.mixins.toolbar\n}))\n\nexport default function Header (props) {\n  const [isSidebarOpen, setIsSidebarOpen] = React.useState(false)\n  const toggleDrawer = state => event => {\n    setIsSidebarOpen(state)\n  }\n  const classes = useStyles()\n\n  const {linksNames} = props\n  return (\n    <AppBar position=\"relative\" className={[\"header\", classes.appBar].join(\" \")}>\n      <Container>\n        <Toolbar>\n          <Hidden smUp>\n            <IconButton onClick={toggleDrawer(!isSidebarOpen)}>\n              <MenuIcon/>\n            </IconButton>\n          </Hidden>\n          <Link to=\"/\" className={\"header__brand\"}>\n              <img src={logo} className={\"header__logo\"} alt=\"logo\"/>\n          </Link>\n          <div style={{flexGrow: 1}}/>\n          <Hidden xsDown>\n            <div className=\"header__links-list\">\n              <List className=\"links\">\n                {\n                  linksNames.map(el => {\n                    return (\n                      <Link to={`/${el}`} key={el} className={\"header__link\"}>\n                        {el}\n                      </Link>\n                    )\n                  })\n                }\n              </List>\n            </div>\n          </Hidden>\n          <Hidden smUp>\n            <Drawer className={[\"sidebar\", classes.drawer].join(\" \")}\n                    classes={{\n                      paper: classes.drawerPaper\n                    }}\n                    open={isSidebarOpen}\n                    onClose={toggleDrawer(!isSidebarOpen)}>\n              <div className={classes.toolbar}/>\n              <List>\n                {linksNames.map(el => (\n                  <Link to={`/${el}`} key={el}\n                        onClick={toggleDrawer(!isSidebarOpen)}\n                        className={\"sidebar__link\"}>\n                    <ListItem button>\n                      <ListItemText>\n                        {el}\n                      </ListItemText>\n                    </ListItem>\n                  </Link>\n                ))}\n              </List>\n            </Drawer>\n          </Hidden>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}","import React, { Component } from \"react\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\n\nclass ListView extends Component {\n  render () {\n    const {data, renderItem, keyExtractor} = this.props\n\n    return (\n      <List>\n        {\n          data.map(el => {\n            return (\n              <ListItem key={keyExtractor(el)}>\n                <ListItemText>\n                  {renderItem(el)}\n                </ListItemText>\n              </ListItem>\n            )\n          })\n        }\n      </List>\n    )\n  }\n}\n\nexport default ListView","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\n\nclass ListItem extends Component {\n  render () {\n    const {data, location} = this.props\n    return (\n      <Link to={`${location.pathname}/${data.id}`}>{data.name || data.title}</Link>\n    )\n  }\n}\n\nexport default ListItem","import React from \"react\"\nimport \"./Pagination.scss\"\nimport { Link } from \"react-router-dom\"\nimport RcPagination from \"rc-pagination\"\nimport Hidden from \"@material-ui/core/Hidden\"\n\nexport default class Pagination extends React.Component {\n  constructor (props) {\n    super(props)\n    this.itemRender = this.itemRender.bind(this)\n  }\n\n  itemRender (current, type, element) {\n    if (type === 'page') {\n      return <Link to={\"?page=\" + current}>{current}</Link>\n    }\n    if (type === \"next\" && this.props.meta.page === current) {\n      return element\n    } \n    if (type === \"prev\" && current < 1) {\n      return element\n    } \n    \n    return <Link to={\"?page=\" + current}/>\n  }\n\n  render () {\n    const {meta} = this.props\n    if (!Object.keys(meta).length) return null\n    return (\n      <div>\n        <Hidden smUp>\n          <RcPagination current={meta.page}\n                        total={meta.count}\n                        onChange={() => {}}\n                        showLessItems\n                        showTitle={false}\n                        itemRender={this.itemRender}/>\n        </Hidden>\n        <Hidden xsDown>\n          <RcPagination current={meta.page}\n                        total={meta.count}\n                        onChange={() => {}}\n                        showTitle={false}\n                        itemRender={this.itemRender}/>\n        </Hidden>\n      </div>\n    )\n  }\n}","import React, { Component } from \"react\"\nimport debounce from \"lodash/debounce\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\nimport { ThemeProvider } from \"@material-ui/styles\"\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"light\"\n  }\n})\n\nclass Search extends Component {\n  constructor (props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n    this.searchInput = React.createRef()\n  }\n\n  componentDidUpdate (prevProps, prevState, snapshot) {\n    if (prevProps.resourceName !== this.props.resourceName) {\n      this.searchInput.current.value = this.props.searchProp || \"\"\n    }\n  }\n\n  debounceUpdateSearch = debounce(this.props.updateSearch, 300)\n\n  handleChange (e) {\n    this.debounceUpdateSearch(e.target.value)\n  }\n\n  render () {\n    return (\n      <div className={\"search\"}>\n        <ThemeProvider theme={theme}>\n          <form noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-name\"\n              label=\"Search\"\n              defaultValue={this.props.searchProp}\n              ref={this.searchInput}\n              onChange={this.handleChange}\n              margin=\"normal\"\n              variant=\"outlined\"\n            />\n          </form>\n        </ThemeProvider>\n      </div>\n    )\n  }\n}\n\nexport default Search","import React from \"react\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\nimport \"./Loader.scss\"\n\nexport default function Loader (props) {\n  if (!props.show) return null\n    \n  return (\n      <div className=\"loader\">\n        <CircularProgress color=\"primary\" size={100}/>\n      </div>\n    )\n}","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport ListView from \"components/ListView\"\nimport { withRouter } from \"react-router-dom\"\nimport { resourcesActions, resourcesSelectors } from \"store/resources\"\nimport ListItem from \"components/ListItem\"\nimport Pagination from \"components/Pagination\"\nimport Search from \"components/Search\"\nimport Typography from \"@material-ui/core/Typography\"\nimport { capitalize } from \"lodash\"\nimport Loader from \"components/ui/Loader\"\n\nclass ResourceList extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isFetching: false,\n      error: null\n    }\n  }\n\n  async componentDidMount () {\n    const page = new URL(window.location.href).searchParams.get(\"page\")\n    await this.getResources(this.props.match.params.resourceName, {page})\n  }\n\n  async componentDidUpdate (prevProps, prevState, snapshot) {\n    const currentUrl = new URL(window.location.href)\n    const page = currentUrl.searchParams.get(\"page\")\n    const {search, pathname} = prevProps.location\n    const prevUrl = new URL(pathname + search, window.location.href)\n    if (currentUrl.href !== prevUrl.href) {\n      await this.getResources(this.props.match.params.resourceName, {page})\n    }\n  }\n\n  async getResources (name, params) {\n    this.setState({isFetching: true, error: null})\n    try {\n      await this.props.getResources(name, params)\n    } catch (error) {\n      this.setState({error})\n    } finally {\n      this.setState({isFetching: false})\n    }\n  }\n\n  async updateSearch (search) {\n    await this.getResources(this.props.match.params.resourceName, {page: 1, search})\n    this.props.history.push({search: \"page=1\"})\n  }\n\n  _keyExtractor (el) {\n    return el.id\n  }\n\n  render () {\n    const {data} = this.props\n\n    return (\n      <div className={\"resource-list\"}>\n        <Typography variant=\"h2\" gutterBottom>\n          {capitalize(this.props.match.params.resourceName)}\n        </Typography>\n        <Search resourceName={this.props.match.params.resourceName}\n                searchProp={this.props.resourcesMeta.search}\n                updateSearch={this.updateSearch.bind(this)}/>\n        {\n          this.state.error ? this.state.error.message :\n            <ListView\n              data={data}\n              renderItem={item => <ListItem data={item} location={this.props.location}/>}\n              keyExtractor={this._keyExtractor}\n            />\n        }\n        <Pagination meta={this.props.resourcesMeta}/>\n        <Loader show={this.state.isFetching}/>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  (state, props) => ({\n    data: resourcesSelectors.getPageResources(state, props.match.params.resourceName),\n    resourcesMeta: resourcesSelectors.getResourcesMeta(state, props.match.params.resourceName)\n  }),\n  {\n    getResources: resourcesActions.getResourcesByName\n  }\n)(ResourceList)) ","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { upperFirst, lowerCase } from \"lodash\"\nimport \"./ShowItem.scss\"\n\nclass ShowItem extends Component {\n  renderLinkItem (item) {\n    const [, id, name] = item.url.split(\"/\").reverse()\n    return <Link to={`/${name}/${id}`}>{item.name || item.title}</Link>\n  }\n\n  renderArray (array) {\n    if (!array.length) return \"Not have\"\n    return array.map(el => {\n      return <div key={el.id}>{this.renderLinkItem(el)}</div>\n    })\n  }\n\n  renderRelation (option) {\n    if (option instanceof Array) {\n      return this.renderArray(option)\n    }\n    return this.renderLinkItem(option)\n  }\n\n  render () {\n    const {data} = this.props\n    const privateFields = [\"id\", \"created\", \"edited\", \"relatedProps\", \"url\"]\n    return (\n      <div className={\"show-item\"}>\n        {Object.keys(data).filter(key => !privateFields.includes(key))\n          .map(el => {\n            if (el === \"name\" || el === \"title\") {\n               return <h2 key={el} className={\"show-item__title\"}>{data[el]}</h2>\n            }\n            return (\n              <div key={el} className={\"show-item__prop\"}>\n                <div className={\"show-item__prop-name\"}>\n                  {upperFirst(lowerCase(el)) + \":\"}\n                </div>\n                <div className={\"show-item__prop-value\"}>\n                  {\n                    data.relatedProps.includes(el) ?\n                      this.renderRelation(data[el]) :\n                      data[el]\n                  }\n                </div>\n              </div>\n            )\n          })}\n      </div>\n    )\n  }\n}\n\nexport default ShowItem","import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { resourcesSelectors, resourcesActions } from \"store/resources\"\nimport ShowItem from \"components/ShowItem\"\nimport Loader from \"components/ui/Loader\"\n\nclass ResourceItem extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      resolvedData: null,\n      isFetching: false,\n      error: null\n    }\n  }\n\n  async componentDidMount () {\n    this.setState({isFetching: true})\n    try {\n      await this.props.getResourceItem(this.props.match.params.resourceName, this.props.match.params.itemId)\n    } catch (error) {\n      this.setState({error})\n    } finally {\n      this.setState({isFetching: false})\n    }\n  }\n\n  async componentDidUpdate (prevProps, prevState, snapshot) {\n    if (this.state.isFetching || this.state.error) return\n\n    const data = this.props.data\n    const resolvedData = this.state.resolvedData\n    const isRouteChanged = this.props.match.url !== prevProps.match.url\n    if (isRouteChanged) this.setState({resolvedData: null})\n    if (!data || resolvedData) return\n\n\n    const newResolvedData = {...data}\n    const promiseArray = []\n    const relatedProps = {}\n\n    const parseUrl = url => {\n      const [, id, name] = url.split(\"/\").reverse()\n      return {name, id}\n    }\n\n    Object.keys(newResolvedData).forEach(key => {\n      if (newResolvedData[key] instanceof Array) {\n        relatedProps[key] = []\n        newResolvedData[key].forEach(el => {\n          const {name, id} = parseUrl(el)\n          promiseArray.push(this.props.getResourceItem(name, id))\n          relatedProps[key].push({name, id})\n        })\n      }\n      if (typeof newResolvedData[key] === \"string\" && key !== \"url\") {\n        if (newResolvedData[key].includes(\"https://swapi.co/api/\")) {\n          const {name, id} = parseUrl(newResolvedData[key])\n          promiseArray.push(this.props.getResourceItem(name, id))\n          relatedProps[key] = {name, id}\n        }\n      }\n    })\n    \n    this.setState({isFetching: true})\n    try {\n      await Promise.all(promiseArray)\n      Object.keys(relatedProps).forEach(key => {\n        if (relatedProps[key] instanceof Array) {\n          newResolvedData[key] = relatedProps[key].map(el => this.props.getResourceSelector(el.name, el.id))\n        } else {\n          newResolvedData[key] = this.props.getResourceSelector(relatedProps[key].name, relatedProps[key].id)\n        }\n      })\n\n      newResolvedData.relatedProps = Object.keys(relatedProps)\n      this.setState({resolvedData: newResolvedData})\n    } catch (e) {\n      this.setState({error: e})\n      console.error(e)\n    } finally {\n      this.setState({isFetching: false})\n    }\n  }\n\n  render () {\n    return (\n      <div>\n        {\n          this.state.error ? this.state.error.message :\n              this.state.resolvedData ? <ShowItem data={this.state.resolvedData}/> :\n                null\n        }\n        <Loader show={this.state.isFetching}/>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(\n  (state, props) => ({\n    data: resourcesSelectors.getResource(state, props.match.params.resourceName, props.match.params.itemId),\n    getResourceSelector: resourcesSelectors.getResource.bind(null, state)\n  }),\n  {\n    getResourceItem: resourcesActions.getResource\n  }\n)(ResourceItem))","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container } from \"@material-ui/core\"\nimport Header from \"components/layout/Header\"\nimport \"./App.scss\"\nimport { resourcesActions, resourcesSelectors } from \"store/resources\"\nimport { errorsSelectors } from \"store/common/errorsReducer\"\nimport { Route, Switch } from \"react-router-dom\"\nimport ResourceList from \"containers/ResourceList\"\nimport ResourceItem from \"containers/ResourceItem\"\nimport Loader from \"components/ui/Loader\"\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isLoading: false\n    }\n  }\n\n  async componentDidMount () {\n    try {\n      this.setState({isLoading: true})\n      await this.props.getResourcesMap()\n    } catch (e) {\n      throw e\n    } finally {\n      this.setState({isLoading: false})\n    }\n  }\n\n  componentDidCatch (error, errorInfo) {\n    console.error(arguments)\n  }\n\n  render () {\n    const {errors} = this.props\n    if (errors && errors.length) {\n      console.warn(\"ERRORS\")\n      console.error(errors)\n    }\n\n    return (\n      <div className=\"App\">\n        <Header linksNames={this.props.resourcesNames}/>\n        <Container>\n          <Switch>\n            <Route exact path=\"/:resourceName\" component={ResourceList}/>\n            <Route path=\"/:resourceName/:itemId\" component={ResourceItem}/>\n          </Switch>\n        </Container>\n        <Loader show={this.state.isLoading}/>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    resourcesNames: resourcesSelectors.getResourcesNames(state),\n    errors: errorsSelectors.getErrors(state),\n    state\n  }),\n  dispatch => ({\n    getResourcesMap: () => dispatch(resourcesActions.getResourcesMap()),\n    dispatch\n  })\n)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"store\"\nimport \"./index.scss\"\nimport App from \"./containers/App\"\nimport { createMuiTheme } from \"@material-ui/core/styles\"\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#424242\"\n    },\n    secondary: {\n      main: \"rgb(1255,0,0)\"\n    },\n    type: \"dark\"\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 768,\n      md: 992,\n      lg: 1200\n    }\n  }\n})\n\nconsole.log(process.env.PUBLIC_URL)\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <ThemeProvider theme={theme}>\n        <App/>\n      </ThemeProvider>\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById(\"root\")\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()"],"sourceRoot":""}